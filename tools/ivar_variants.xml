<tool id="recov_ivar_variants" name="RECoV ivar variants" version="@TOOL_VERSION@+galaxy1" profile="@PROFILE@">
    <description>Call variants from aligned BAM file</description>
    <macros>
        <import>ivar_variants_macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="version_command"/>
    <command detect_errors="exit_code"><![CDATA[
        ln -s '$ref' ref.fa &&
        ln -s '$input_bam' sorted.bam &&
        samtools mpileup -A -d 0 --reference ref.fa -B -Q 0 sorted.bam | ivar variants
        -p variants
        -q $min_qual
        -t $min_freq
        #if str($output_format.choice) == "tabular" or str($output_format.choice) == "tabular_and_vcf"
            #if str($gtf) != 'None':
                -r ref.fa
                -g '$gtf'
            #end if
        #end if
        #if str($output_format.choice) == "vcf" or str($output_format.choice) == "tabular_and_vcf"
            && python '${__tool_directory__}/ivar_variants_to_vcf.py'
            ${output_format.pass_only}
            variants.tsv variants.vcf
        #end if
    ]]></command>
    <inputs>
        <param name="input_bam" type="data" format="bam" label="Bam file" help="Aligned reads, to trim primers and quality"/>
        <param name="ref" type="data" format="fasta" label="Reference"/>
        <param name="min_qual" argument="-q" type="integer" min="0" max="255" value="20" label="Minimum quality score threshold to count base"/>
        <param name="min_freq" argument="-t" type="float" min="0" max="1" value="0.03" label="Minimum frequency threshold"/>
        <conditional name="output_format">
            <param name="choice" type="select" label="Output format">
                <option value="tabular">Tabular (native tool output)</option>
                <option value="vcf">VCF</option>
                <option value="tabular_and_vcf">Both Tabular and VCF</option>
            </param>
            <when value="vcf">
                <param argument="--pass_only" type="boolean" truevalue="--pass_only" falsevalue="" label="In VCF only output variants that PASS all filters"/>
            </when>
            <when value="tabular_and_vcf">
                <param argument="--pass_only" type="boolean" truevalue="--pass_only" falsevalue="" label="In VCF only output variants that PASS all filters"/>
                <param name="gtf" argument="-g" optional="true" type="data" format="gff" label="Coordinates of ORFs for optional variant effect prediction" help="Provide a GFF3 dataset with annotated ORFs to have the rightmost 5 columns of the tabular output populated with mutation information at the residue level. This has no effect on the VCF output."/>
            </when>
            <when value="tabular">
                <param name="gtf" argument="-g" optional="true" type="data" format="gff" label="Coordinates of ORFs for optional variant effect prediction" help="Provide a GFF3 dataset with annotated ORFs to have the rightmost 5 columns of the tabular output populated with mutation information at the residue level."/>
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data name="output_variants_tabular" from_work_dir="./variants.tsv" format="tabular" label="${tool.name} tabular output on ${on_string}">
            <filter>output_format['choice'] == 'tabular' or output_format['choice'] == 'tabular_and_vcf'</filter>
            <actions>
                <action name="column_names" type="metadata" default="REGION,POS,REF,ALT,REF_DP,REF_RV,REF_QUAL,ALT_DP,ALT_RV,ALT_QUAL,ALT_FREQ,TOTAL_DP,PVAL,PASS,GFF_FEATURE,REF_CODON,REF_AA,ALT_CODON,ALT_AA,POS_AA"/>
            </actions>
        </data>
        <data name="output_variants_vcf" from_work_dir="./variants.vcf" format="vcf" label="${tool.name} VCF on ${on_string}">
            <filter>output_format['choice'] == 'vcf' or output_format['choice'] == 'tabular_and_vcf'</filter>
        </data>
    </outputs>

    <help></help>
    <expand macro="citations">
        <citation type="bibtex">@misc{githubivar_variants_to_vcf,
            author = {Fernandez, Sarai Varona and Patel, Harshil},
            year = {2021},
            title = {ivar_variants_to_vcf},
            url = {https://github.com/nf-core/viralrecon/blob/dev/bin/ivar_variants_to_vcf.py}
        }</citation>
    </expand>
</tool>
